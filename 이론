1. 연결중심성 (degree centrality)

1-1. 한 Node에 연결된 모든 Edge의 갯수로 중심성을 평가

1-2. 방향성이 있는 네트워크의 경우(한 노드로 들어오는 간선과 나가는 간선이 구분됨) 
- in-degree만 계산할 경우 그 노드의 인기도를 볼 수 있음.
- out-degree만 계산할 경우 그 노드의 영향력을 볼 수 있음.

1-3. 하지만 단순하게 연결중심성만으로는 중심성 비교 수행이 어렵다.
- 규모가 큰 네트워크일수록 당연히 연결중심성도 커지기때문에 공정한 비교가 어렵다.
- 이를 해결하기 위해 정규화를 사용하기도 함

1-4. 정규화방법
- 네트워크 내 가능한 최대 연결중심성값(N-1)(가능한 최대값: 노드가 5개면 최대 4까지 연결중심성값을 가질수 있음)으로 나눈다.
- 해당 네트워크에서 나오는 가장 큰 연결중심성값(실제로 나온값)으로 나눈다.
- 네트워크 내의 모든 연결중심성값들을 더한값으로 나눈다.


2. 고유벡터 중심성

2-1. 무조건 다른노드들과 연결이 많다고 해서 중요한 노드가 되는것은 아니다.
- 중요한 노드와 많이 연결되는것이 더 중요하다.
- EX) 친구가 많다고(단순 연결이 많다고) 유명한 사람인건 아님, 중요한 친구(친구가 많은)들이 많을수록 유명한 사람이다.

2-2. 만약 5개의 노드가 있다.
- 1번 노드의 중심성을 계산할때 2번,3번,4번,5번 노드의 중심성도 반영해서 계산한다.



3.katz 중심성(고유벡터 중심성 개선)
- 방향성 비순환 네트워크의 경우 중심성이 0 으로 계산되는 경우가 발생

3-1. 이를 방지하기 위해 모든 노드 중심성에 특정한 상수값을 더하는 방식
알파값을 곱하고 베타(상수)를 더해준다.




4.페이지랭크 (katz 중심성을 개선, 가장 성공적 알고리즘) - 체크해야함(12월 10일)

- katz 를 계산할대, 외부로 나가는 간선의 영향력이 지나치게 퍼지는것을 막는다.



4.근접중심성

4-1. 특정 노드가 그를 제외한 다른 노드들과 얼마나 가까이 있는지를 나타내는지표
- 중요노드일수록 다른 노드까지 도달하는 경로가 짧을것이라는 가정
- A도시에서 전국각지로 가는데 걸리는 시간, B도시에서 전국 각지로 가는데 걸리는 시간을 비교. 중요도시일수록 그 시간이 짧을것이다.
- 해당 노드의 도달 가능 거리 총합의 역수로 정의된다.



5. 매개중심성

5-1. 노드들간의 최단 경로를 가지고 계산
- A를 제외한 도시에 사는 사람들이 다른 도시로 이동할 때 얼마나 A도시를 거쳐가는지 보는것
- x-y의 최단 경로들에 항상 A가 포함되면 그 값은 1, x-y의 최단경로들중 A를 거치는 경로가 한도 없으면 그 값은 0

5-2. 매개중심성도 네트워크 규모에 따라 그 크기가 달라질 수 있음
- 노드 갯수가 N인 네트워크의 최대 매개중심성값은 (N-1)(N-2)/2 이다. 이 값으로 나눠서 정규화
- EX) 5개의 노드중 A노드의 매개중심성을 구하려함. 나머지 4개 노드로 나올수있는 경우의 수(여행의 종료)는 총6, 모든 경우 A를 거쳐야 한다면
A가 가질수 있는 최대값은 6 이다. 
- 위와 같이 최대값으로 나눔으로서 정규화 시키면 항상 매개 중심성 값은 0~1 사이로 유지됨
